9d8
< 
15c14
< perc_change <- 0
---
> perc_change <- 0.01
28c27
< # head(scale(allD$percCover, center=TRUE, scale=TRUE))
---
> head(scale(allD$percCover, center=TRUE, scale=TRUE))
37,40c36,39
< # pptVars=grep("ppt",names(climD))
< # tmp1=perc_change*colMeans(climD)
< # tmp1=matrix(tmp1,NROW(climD),length(tmp1),byrow=T)
< # climD[,pptVars]=climD[,pptVars]+tmp1[,pptVars]
---
> pptVars=grep("ppt",names(climD))
> tmp1=perc_change*colMeans(climD)
> tmp1=matrix(tmp1,NROW(climD),length(tmp1),byrow=T)
> climD[,pptVars]=climD[,pptVars]+tmp1[,pptVars]
51c50
<   outfile <- paste("./results/climatechange_meanparams/", do_species, "_qbm_cover_noClimChange.RDS", sep="")
---
>   outfile <- paste("./results/climatechange_meanparams/", do_species, "_qbm_cover_pptChange.RDS", sep="")
81c80
< 
---
>   
104c103
<   covd$climsim <- "obs"
---
>   covd$climsim <- "ppt"
#Quad-Based Model simulations					#Quad-Based Model simulations

#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#	#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#
# Set working directory to location of this source file #	# Set working directory to location of this source file #
#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#	#!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!#

#clear everything, just to be safe 				#clear everything, just to be safe 
rm(list=ls(all=TRUE))						rm(list=ls(all=TRUE))
							      <
climvec <- readRDS("../../climate_year_sequence.rds")		climvec <- readRDS("../../climate_year_sequence.rds")

# do_species <- "BOGR"						# do_species <- "BOGR"
tsims <- 2500							tsims <- 2500
burn.in <- 500							burn.in <- 500
perc_change <- 0					      |	perc_change <- 0.01

library(reshape2)						library(reshape2)
library(plyr)							library(plyr)
library(ggplot2)						library(ggplot2)
library(ggthemes)						library(ggthemes)
library(gridExtra)						library(gridExtra)
library(EnvStats)						library(EnvStats)

#bring in data							#bring in data
allD <- read.csv("../../speciesData/quadAllCover.csv")		allD <- read.csv("../../speciesData/quadAllCover.csv")
allD <- allD[,2:ncol(allD)] #get rid of X ID column		allD <- allD[,2:ncol(allD)] #get rid of X ID column
allD$percCover <- allD$totCover/10000				allD$percCover <- allD$totCover/10000
# head(scale(allD$percCover, center=TRUE, scale=TRUE))	      |	head(scale(allD$percCover, center=TRUE, scale=TRUE))
sppList <- as.character(unique(allD$Species))			sppList <- as.character(unique(allD$Species))

#perturb climate data						#perturb climate data
climD <- read.csv("../../weather/Climate.csv")			climD <- read.csv("../../weather/Climate.csv")
climScale <- scale(climD[2:6], center = TRUE, scale = TRUE)	climScale <- scale(climD[2:6], center = TRUE, scale = TRUE)
climAvg <- apply(X = climD, MARGIN = 2, FUN = mean)		climAvg <- apply(X = climD, MARGIN = 2, FUN = mean)
climSD <- apply(X = climD, MARGIN = 2, FUN = sd)		climSD <- apply(X = climD, MARGIN = 2, FUN = sd)

# pptVars=grep("ppt",names(climD))			      |	pptVars=grep("ppt",names(climD))
# tmp1=perc_change*colMeans(climD)			      |	tmp1=perc_change*colMeans(climD)
# tmp1=matrix(tmp1,NROW(climD),length(tmp1),byrow=T)	      |	tmp1=matrix(tmp1,NROW(climD),length(tmp1),byrow=T)
# climD[,pptVars]=climD[,pptVars]+tmp1[,pptVars]	      |	climD[,pptVars]=climD[,pptVars]+tmp1[,pptVars]

climD[2] <- (climD[2] - climAvg[2])/climSD[2]			climD[2] <- (climD[2] - climAvg[2])/climSD[2]
climD[3] <- (climD[3] - climAvg[3])/climSD[3]			climD[3] <- (climD[3] - climAvg[3])/climSD[3]
climD[4] <- (climD[4] - climAvg[4])/climSD[4]			climD[4] <- (climD[4] - climAvg[4])/climSD[4]
climD[5] <- (climD[5] - climAvg[5])/climSD[5]			climD[5] <- (climD[5] - climAvg[5])/climSD[5]
climD[6] <- (climD[6] - climAvg[6])/climSD[6]			climD[6] <- (climD[6] - climAvg[6])/climSD[6]


##  Loop through species					##  Loop through species
for(do_species in sppList){					for(do_species in sppList){
  outfile <- paste("./results/climatechange_meanparams/", do_ |	  outfile <- paste("./results/climatechange_meanparams/", do_
  								  
  ##  Load vital rate parameters				  ##  Load vital rate parameters
  fitlong <- readRDS(paste("../vitalRateRegressions/truncNorm	  fitlong <- readRDS(paste("../vitalRateRegressions/truncNorm
                           do_species, ".RDS", sep=""))		                           do_species, ".RDS", sep=""))
  fitthin <- ddply(fitlong, .(Parameter), summarise,		  fitthin <- ddply(fitlong, .(Parameter), summarise,
                   value = mean(value))				                   value = mean(value))
  								  
  ##  Break up MCMC into regression components			  ##  Break up MCMC into regression components
  # Climate effects						  # Climate effects
  climeff <- fitthin[grep("b2", fitthin$Parameter),]		  climeff <- fitthin[grep("b2", fitthin$Parameter),]
  climeff$id <- substr(climeff$Parameter, 4, length(climeff$P	  climeff$id <- substr(climeff$Parameter, 4, length(climeff$P
  climeff$id <- unlist(strsplit(climeff$id, split=']'))		  climeff$id <- unlist(strsplit(climeff$id, split=']'))
  climeff <- climeff[with(climeff, order(as.numeric(id))),]	  climeff <- climeff[with(climeff, order(as.numeric(id))),]
  								  
  # Mean cover (size) effects					  # Mean cover (size) effects
  coveff <- fitthin[grep(glob2rx("b1_mu"), fitthin$Parameter)	  coveff <- fitthin[grep(glob2rx("b1_mu"), fitthin$Parameter)
  								  
  # Mean intercept						  # Mean intercept
  intercept <- fitthin[grep("a_mu", fitthin$Parameter),]	  intercept <- fitthin[grep("a_mu", fitthin$Parameter),]
  								  
  # Lognormal sigma (called tau here)				  # Lognormal sigma (called tau here)
  tau <- fitthin[grep("tau", fitthin$Parameter),]		  tau <- fitthin[grep("tau", fitthin$Parameter),]
  								  
  ##  Define population growth function				  ##  Define population growth function
  growFunc <- function(N, int, slope, clims, climcovs, tau){	  growFunc <- function(N, int, slope, clims, climcovs, tau){
    mu <- int+slope*log(N)+sum(clims[1:7]*climcovs)+sum(clims	    mu <- int+slope*log(N)+sum(clims[1:7]*climcovs)+sum(clims
    newN <- rlnormTrunc(1, meanlog = mu, sdlog = tau, min = 0	    newN <- rlnormTrunc(1, meanlog = mu, sdlog = tau, min = 0
    return(newN)						    return(newN)
  }								  }
							      |	  
  ##  Run simulations						  ##  Run simulations
  outD <- data.frame(cover=NA, species=NA, year=NA)		  outD <- data.frame(cover=NA, species=NA, year=NA)
  cover <- numeric(tsims)					  cover <- numeric(tsims)
  cover[1] <- 0.01						  cover[1] <- 0.01
  pb <- txtProgressBar(min=2, max=tsims, char="+", style=3, w	  pb <- txtProgressBar(min=2, max=tsims, char="+", style=3, w
  for(t in 2:tsims){						  for(t in 2:tsims){
    inttmp <- intercept						    inttmp <- intercept
    slopetmp <- coveff						    slopetmp <- coveff
    tmpclim <- climeff						    tmpclim <- climeff
    tmptau <- tau						    tmptau <- tau
    climyear <- climvec[t] - min(climvec)+1			    climyear <- climvec[t] - min(climvec)+1
    climcovs <- climD[climyear,c("pptLag", "ppt1", "ppt2", "T	    climcovs <- climD[climyear,c("pptLag", "ppt1", "ppt2", "T
    climcovs$inter1 <- climcovs$ppt1*climcovs$TmeanSpr1		    climcovs$inter1 <- climcovs$ppt1*climcovs$TmeanSpr1
    climcovs$inter2 <- climcovs$ppt2*climcovs$TmeanSpr2		    climcovs$inter2 <- climcovs$ppt2*climcovs$TmeanSpr2
    cover[t] <- growFunc(N = cover[t-1], int = inttmp$value, 	    cover[t] <- growFunc(N = cover[t-1], int = inttmp$value, 
                         slope = slopetmp$value, clims = tmpc	                         slope = slopetmp$value, clims = tmpc
                         climcovs = climcovs, tau = tmptau$va	                         climcovs = climcovs, tau = tmptau$va
    setTxtProgressBar(pb, t)					    setTxtProgressBar(pb, t)
  }#end simulation loop						  }#end simulation loop
  # Save the output						  # Save the output
  covd <- as.data.frame(cover[burn.in:tsims])			  covd <- as.data.frame(cover[burn.in:tsims])
  covd$species <- do_species					  covd$species <- do_species
  covd$climsim <- "obs"					      |	  covd$climsim <- "ppt"
  colnames(covd)[1] <- "cover"					  colnames(covd)[1] <- "cover"
  saveRDS(covd, outfile)					  saveRDS(covd, outfile)
}#end species loop						}#end species loop

